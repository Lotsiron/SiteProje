// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(KuaforYonetimContext))]
    partial class KuaforYonetimContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Calisan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ad");

                    b.Property<int>("KuaforId")
                        .HasColumnType("integer")
                        .HasColumnName("kuafor_id");

                    b.Property<string>("Uzmanlik")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("uzmanlik");

                    b.HasKey("Id");

                    b.HasIndex("KuaforId");

                    b.ToTable("calisanlar");
                });

            modelBuilder.Entity("WebApplication1.Models.CalisanHizmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CalisanId")
                        .HasColumnType("integer")
                        .HasColumnName("calisan_id");

                    b.Property<int>("HizmetId")
                        .HasColumnType("integer")
                        .HasColumnName("hizmet_id");

                    b.HasKey("Id");

                    b.HasIndex("HizmetId");

                    b.HasIndex("CalisanId", "HizmetId")
                        .IsUnique();

                    b.ToTable("calisan_hizmetler");
                });

            modelBuilder.Entity("WebApplication1.Models.CalisanUygunluk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("BaslangicSaati")
                        .HasColumnType("interval")
                        .HasColumnName("baslangic_saati");

                    b.Property<TimeSpan>("BitisSaati")
                        .HasColumnType("interval")
                        .HasColumnName("bitis_saati");

                    b.Property<int>("CalisanId")
                        .HasColumnType("integer")
                        .HasColumnName("calisan_id");

                    b.Property<DateTime?>("GecerlilikTarihiBas")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("gecerlilik_tarihi_bas");

                    b.Property<DateTime?>("GecerlilikTarihiSon")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("gecerlilik_tarihi_son");

                    b.Property<string>("Gun")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("gun");

                    b.HasKey("Id");

                    b.HasIndex("CalisanId");

                    b.ToTable("calisan_uygunluk");
                });

            modelBuilder.Entity("WebApplication1.Models.Hizmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ad");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("numeric")
                        .HasColumnName("fiyat");

                    b.Property<int>("Sure")
                        .HasColumnType("integer")
                        .HasColumnName("sure");

                    b.HasKey("Id");

                    b.ToTable("hizmetler");
                });

            modelBuilder.Entity("WebApplication1.Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ad");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<DateTime>("OlusmaTarihi")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<int>("RolId")
                        .HasColumnType("integer")
                        .HasColumnName("rol_id");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("sifre");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("soyad");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("telefon");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("kullanicilar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Admin",
                            Email = "G221210075@sakarya.edu.tr",
                            OlusmaTarihi = new DateTime(2024, 12, 28, 7, 27, 2, 334, DateTimeKind.Local).AddTicks(5548),
                            RolId = 1,
                            Sifre = "sau",
                            Soyad = "Pekdemir",
                            Telefon = "551-086-9404"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Randevu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<TimeSpan>("baslangic_saati")
                        .HasColumnType("interval")
                        .HasColumnName("baslangic_saati");

                    b.Property<TimeSpan>("bitis_saati")
                        .HasColumnType("interval")
                        .HasColumnName("bitis_saati");

                    b.Property<int>("calisan_id")
                        .HasColumnType("integer")
                        .HasColumnName("calisan_id");

                    b.Property<decimal>("fiyat")
                        .HasColumnType("numeric")
                        .HasColumnName("fiyat");

                    b.Property<int>("hizmet_id")
                        .HasColumnType("integer")
                        .HasColumnName("hizmet_id");

                    b.Property<int>("kuafor_id")
                        .HasColumnType("integer")
                        .HasColumnName("kuafor_id");

                    b.Property<string>("musteri_adi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("musteri_adi");

                    b.Property<DateTime>("tarih")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("tarih");

                    b.Property<string>("telefon")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("telefon");

                    b.HasKey("id");

                    b.HasIndex("calisan_id");

                    b.HasIndex("hizmet_id");

                    b.HasIndex("kuafor_id");

                    b.ToTable("randevular");
                });

            modelBuilder.Entity("WebApplication1.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ad");

                    b.HasKey("Id");

                    b.ToTable("roller");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Ad = "User"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Salon", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<TimeSpan>("acilis_saati")
                        .HasColumnType("interval")
                        .HasColumnName("acilis_saati");

                    b.Property<string>("ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ad");

                    b.Property<TimeSpan>("kapanis_saati")
                        .HasColumnType("interval")
                        .HasColumnName("kapanis_saati");

                    b.Property<string>("tur")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("tur");

                    b.HasKey("id");

                    b.ToTable("kuaforler");
                });

            modelBuilder.Entity("WebApplication1.Models.Calisan", b =>
                {
                    b.HasOne("WebApplication1.Models.Salon", "Salon")
                        .WithMany("calisanlar")
                        .HasForeignKey("KuaforId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("WebApplication1.Models.CalisanHizmet", b =>
                {
                    b.HasOne("WebApplication1.Models.Calisan", "Calisan")
                        .WithMany("CalisanHizmetler")
                        .HasForeignKey("CalisanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Hizmet", "Hizmet")
                        .WithMany()
                        .HasForeignKey("HizmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calisan");

                    b.Navigation("Hizmet");
                });

            modelBuilder.Entity("WebApplication1.Models.CalisanUygunluk", b =>
                {
                    b.HasOne("WebApplication1.Models.Calisan", "Calisan")
                        .WithMany("CalisanUygunluklar")
                        .HasForeignKey("CalisanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calisan");
                });

            modelBuilder.Entity("WebApplication1.Models.Kullanici", b =>
                {
                    b.HasOne("WebApplication1.Models.Rol", "Rol")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("WebApplication1.Models.Randevu", b =>
                {
                    b.HasOne("WebApplication1.Models.Calisan", "Calisan")
                        .WithMany()
                        .HasForeignKey("calisan_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Hizmet", "Hizmet")
                        .WithMany()
                        .HasForeignKey("hizmet_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Salon", "Salon")
                        .WithMany()
                        .HasForeignKey("kuafor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calisan");

                    b.Navigation("Hizmet");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("WebApplication1.Models.Calisan", b =>
                {
                    b.Navigation("CalisanHizmetler");

                    b.Navigation("CalisanUygunluklar");
                });

            modelBuilder.Entity("WebApplication1.Models.Rol", b =>
                {
                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("WebApplication1.Models.Salon", b =>
                {
                    b.Navigation("calisanlar");
                });
#pragma warning restore 612, 618
        }
    }
}
