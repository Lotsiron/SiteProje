@model List<WebApplication1.Models.Calisan>

<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800 text-center">Çalışan Yönetimi</h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Çalışanlar</h6>
            <button class="btn btn-primary" onclick="showCalisanModal()">
                <i class="fas fa-plus"></i> Yeni Çalışan Ekle
            </button>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Ad</th>
                            <th>Salon</th>
                            <th>Hizmetler</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var calisan in Model)
                        {
                            <tr>
                                <td>@calisan.Ad</td>
                                <td>@calisan.Salon?.ad</td>
                                <td>
                                    @string.Join(", ", calisan.CalisanHizmetler.Select(ch => ch.Hizmet.Ad))
                                </td>
                                <td>
                                    <button class="btn btn-warning btn-sm" 
                                            onclick="showEditModal(@Json.Serialize(new { 
                                                calisan.Id, 
                                                calisan.Ad, 
                                                SalonId = calisan.KuaforId,
                                                HizmetIds = calisan.CalisanHizmetler.Select(ch => ch.HizmetId)
                                            }))">
                                        <i class="fas fa-edit"></i> Düzenle
                                    </button>
                                    <button class="btn btn-danger btn-sm" onclick="deleteCalisan(@calisan.Id)">
                                        <i class="fas fa-trash"></i> Sil
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Çalışan Ekleme/Düzenleme Modalı -->
<div class="modal fade" id="calisanModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Yeni Çalışan Ekle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="calisanForm">
                    <input type="hidden" id="calisanId">
                    <div class="form-group">
                        <label>Ad Soyad</label>
                        <input type="text" class="form-control" id="calisanAdi" required>
                    </div>
                    <div class="form-group">
                        <label>Salon</label>
                        <select class="form-control" id="salonId" required>
                            <option value="">Salon Seçin</option>
                            @foreach (var salon in ViewBag.Salonlar)
                            {
                                <option value="@salon.id">@salon.ad</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Hizmetler</label>
                        <select class="form-control" id="hizmetIds" multiple required>
                            @foreach (var hizmet in ViewBag.Hizmetler)
                            {
                                <option value="@hizmet.Id">@hizmet.Ad</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" onclick="saveCalisan()">Kaydet</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function showCalisanModal(calisan = null) {
            if (calisan) {
                $('#modalTitle').text('Çalışan Düzenle');
                $('#calisanId').val(calisan.Id);
                $('#calisanAdi').val(calisan.Ad);
                $('#salonId').val(calisan.SalonId);
                $('#hizmetIds').val([...calisan.HizmetIds]);
            } else {
                $('#modalTitle').text('Yeni Çalışan Ekle');
                $('#calisanForm')[0].reset();
                $('#calisanId').val('');
                $('#hizmetIds').val([]);
            }
            $('#calisanModal').modal('show');
        }

        function showEditModal(calisan) {
            showCalisanModal(calisan);
        }

        async function saveCalisan() {
            const calisan = {
                Id: $('#calisanId').val() || 0,
                Ad: $('#calisanAdi').val(),
                SalonId: parseInt($('#salonId').val()),
                HizmetIds: $('#hizmetIds').val().map(Number)
            };

            const url = calisan.Id ? '/Admin/CalisanGuncelle' : '/Admin/CalisanEkle';
            const method = calisan.Id ? 'PUT' : 'POST';

            try {
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    body: JSON.stringify(calisan)
                });

                const result = await response.json();
                if (result.success) {
                    $('#calisanModal').modal('hide');
                    location.reload();
                } else {
                    alert('Hata: ' + result.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Bir hata oluştu');
            }
        }

        async function deleteCalisan(id) {
            if (!confirm('Bu çalışanı silmek istediğinizden emin misiniz?')) {
                return;
            }

            try {
                const response = await fetch(`/Admin/CalisanSil?id=${id}`, {
                    method: 'DELETE',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    }
                });

                const result = await response.json();
                if (result.success) {
                    location.reload();
                } else {
                    alert('Hata: ' + result.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Bir hata oluştu');
            }
        }

    </script>
}

@Html.AntiForgeryToken() 